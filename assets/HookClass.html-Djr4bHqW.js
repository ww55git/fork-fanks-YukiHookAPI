import{_ as s,o,c as a,a as n}from"./app-BFk-K-88.js";const l={},e=n(`<h1 id="hookclass-class" tabindex="-1"><a class="header-anchor" href="#hookclass-class" aria-hidden="true">#</a> HookClass <span class="symbol">- class</span></h1><div class="language-kotlin" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">HookClass</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">internal</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">constructor</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">internal</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> instance: </span><span style="color:#F69D50;">Class</span><span style="color:#ADBAC7;">&lt;*&gt;?, </span><span style="color:#F47067;">internal</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> name: </span><span style="color:#F69D50;">String</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">internal</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">var</span><span style="color:#ADBAC7;"> throwable: </span><span style="color:#F69D50;">Throwable</span><span style="color:#ADBAC7;">?)</span></span>
<span class="line"></span></code></pre></div><p><strong>变更记录</strong></p><p><code>v1.0</code> <code>添加</code></p><p><code>v1.1.0</code> <code>修改</code></p><p><code>HookClass</code> 相关功能不再对外开放</p><p><strong>功能描述</strong></p><blockquote><p>创建一个当前 Hook 的 <code>Class</code> 接管类。</p></blockquote><p><code>instance</code> 为实例，<code>name</code> 为实例完整包名，<code>throwable</code> 为找不到实例的时候抛出的异常。</p>`,9),c=[e];function p(t,r){return o(),a("div",null,c)}const i=s(l,[["render",p],["__file","HookClass.html.vue"]]);export{i as default};
